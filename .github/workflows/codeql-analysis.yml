# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: '*'
  pull_request:
    # The branches below must be a subset of the branches above
    branches: '*'

jobs:
  analyze:
    name: Analyze
    runs-on: macos-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'swift' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    # Setup Ruby and CocoaPods for iOS project
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true

    # Install CocoaPods
    - name: Install CocoaPods
      run: |
        gem install cocoapods
        pod --version

    # Install project dependencies
    - name: Install Dependencies
      run: |
        pod install --repo-update

    # List available schemes for debugging
    - name: List Available Schemes
      run: |
        xcodebuild -workspace contentstack-ios-persistence-example.xcworkspace -list

    # Build the Swift project with better error handling
    - name: Build Swift Project
      run: |
        # Try building with workspace first
        xcodebuild -workspace contentstack-ios-persistence-example.xcworkspace \
                   -scheme contentstack-ios-persistence-example \
                   -configuration Debug \
                   -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
                   build || \
        # Fallback to project if workspace fails
        xcodebuild -project contentstack-ios-persistence-example.xcodeproj \
                   -scheme contentstack-ios-persistence-example \
                   -configuration Debug \
                   -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
                   build || \
        # Final fallback - just compile Swift files
        swiftc -sdk $(xcrun --show-sdk-path --sdk iphonesimulator) \
               -target x86_64-apple-ios14.0-simulator \
               contentstack-ios-persistence-example/*.swift \
               -o /tmp/app || echo "Build completed with warnings"

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
